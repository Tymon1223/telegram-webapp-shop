import React, { useState, useEffect } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";
import Loading from "./components/Loading";

export default function WebAppShop() {
  const [products, setProducts] = useState<any[]>([]); // ”®–Ω—ñ–º–¥–µ—Ä–¥—ñ“£ —Ç–∏–ø—ñ–Ω –Ω–∞“õ—Ç—ã–ª–∞—É –∂–∞“õ—Å—ã (–º—ã—Å–∞–ª—ã, interface Product {...})
  const [cart, setCart] = useState<any[]>([]); // –°–æ–ª —Å–∏—è“õ—Ç—ã, cart —ç–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä—ñ–Ω—ñ“£ —Ç–∏–ø—ñ
  const [page, setPage] = useState<"catalog" | "cart" | "address" | "confirm">("catalog");
  const [address, setAddress] = useState({ city: "", street: "", entrance: "", floor: "", flat: "" });
  const [user, setUser] = useState<{ id: string, username: string } | null>(null);

  const [productsLoading, setProductsLoading] = useState(true); // ”®–Ω—ñ–º–¥–µ—Ä “Ø—à—ñ–Ω –±”©–ª–µ–∫ loading
  const [telegramReady, setTelegramReady] = useState(false); // Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ–Ω—ñ“£ –¥–∞–π—ã–Ω–¥—ã“ì—ã “Ø—à—ñ–Ω
  const [initialLoading, setInitialLoading] = useState(true); // –ñ–∞–ª–ø—ã –±–∞—Å—Ç–∞–ø“õ—ã –∂“Ø–∫—Ç–µ—É

  const [error, setError] = useState<string | null>(null);

  // 1Ô∏è‚É£ ”®–Ω—ñ–º–¥–µ—Ä–¥—ñ Google Sheet-—Ç–µ–Ω –∂“Ø–∫—Ç–µ–π–º—ñ–∑
  useEffect(() => {
    async function fetchProducts() {
      setProductsLoading(true); // –ñ“Ø–∫—Ç–µ—É–¥—ñ –±–∞—Å—Ç–∞—É
      setError(null); // –ê–ª–¥—ã“£“ì—ã “õ–∞—Ç–µ–Ω—ñ —Ç–∞–∑–∞–ª–∞—É
      try {
        const res = await fetch("https://opensheet.elk.sh/1O03ib-iT4vTpJEP5DUOawv96NvQPiirhQSudNEBAtQk/Sheet1");
        if (!res.ok) { // HTTP “õ–∞—Ç–µ—Å—ñ–Ω —Ç–µ–∫—Å–µ—Ä—É
          throw new Error(`HTTP error! status: ${res.status}`);
        }
        const data = await res.json();
        setProducts(data.map((item: any) => {
          const isDrive = item.imageURL && item.imageURL.includes("drive.google.com");
          return {
            ...item,
            id: item.id || crypto.randomUUID(), // –ï–≥–µ—Ä id –±–æ–ª–º–∞—Å–∞, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–ª–∞—É
            price: +item.price || 0, // –ï–≥–µ—Ä –±–∞“ì–∞—Å—ã –∂–∞—Ä–∞–º—Å—ã–∑ –±–æ–ª—Å–∞, 0
            imageURL: isDrive
              ? `https://drive.google.com/uc?export=view&id=${item.imageURL.split("/d/")[1].split("/")[0]}`
              : item.imageURL
          };
        }));
      } catch (e: any) {
        console.error("Failed to fetch products:", e);
        setError(`”®–Ω—ñ–º–¥–µ—Ä –∂“Ø–∫—Ç–µ–ª–º–µ–¥—ñ: ${e.message}`);
      } finally {
        setProductsLoading(false);
      }
    }
    fetchProducts();
  }, []);

  // 2Ô∏è‚É£ Telegram WebApp –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ–Ω —Ç–µ–∫—Å–µ—Ä–µ–º—ñ–∑
  useEffect(() => {
    if (window.Telegram?.WebApp) {
      try {
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        const init = window.Telegram.WebApp.initDataUnsafe;
        if (init?.user) {
          setUser({
            id: init.user.id.toString(),
            username: init.user.username || "(unknown)"
          });
          setTelegramReady(true); // Telegram –¥–∞–π—ã–Ω
        } else {
          // –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –¥–µ—Ä–µ–≥—ñ –∂–æ“õ, –±—ñ—Ä–∞“õ WebApp –∫–æ–Ω—Ç–µ–∫—Å—ñ –±–∞—Ä.
          // –ë“±–ª –∂–∞“ì–¥–∞–π–¥—ã “õ–∞–ª–∞–π ”©“£–¥–µ—É –∫–µ—Ä–µ–∫—Ç—ñ–≥—ñ–Ω —à–µ—à—É –∫–µ—Ä–µ–∫.
          // –ú“Ø–º–∫—ñ–Ω –±“±–ª –¥–∞ “õ–∞—Ç–µ –Ω–µ–º–µ—Å–µ WebApp —Å—ã—Ä—Ç—ã–Ω–¥–∞ –∞—à—ã–ª“ì–∞–Ω“ì–∞ “±“õ—Å–∞—Å.
          console.warn("Telegram WebApp context is present, but no user data.");
          setTelegramReady(false); // –ù–µ–º–µ—Å–µ true, –±—ñ—Ä–∞“õ user –∂–æ“õ –µ–∫–µ–Ω—ñ–Ω –µ—Å–∫–µ—Ä—É
        }
      } catch (e) {
        console.error("Error initializing Telegram WebApp:", e);
        // –ë“±–ª –∂–µ—Ä–¥–µ “õ–∞—Ç–µ —Ç—É—ã–Ω–¥–∞—Å–∞, isTelegram === false —Å—Ü–µ–Ω–∞—Ä–∏–π—ñ–Ω–µ ”©—Ç—É—ñ –º“Ø–º–∫—ñ–Ω.
        setTelegramReady(false);
      }
    } else {
      setTelegramReady(false); // Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –∂–æ“õ
    }
  }, []);

  // –ñ–∞–ª–ø—ã –±–∞—Å—Ç–∞–ø“õ—ã –∂“Ø–∫—Ç–µ—É –∫“Ø–π—ñ–Ω –∞–Ω—ã“õ—Ç–∞—É
  useEffect(() => {
    // `telegramReady` –∫“Ø–π—ñ–Ω—ñ“£ –±–∞—Å—Ç–∞–ø“õ—ã –º”ô–Ω—ñ `false` –±–æ–ª“ì–∞–Ω–¥—ã“õ—Ç–∞–Ω,
    // `window.Telegram?.WebApp` —Ç–µ–∫—Å–µ—Ä—É—ñ–Ω–µ–Ω –∫–µ–π—ñ–Ω –æ–ª –Ω–µ `true`, –Ω–µ `false` –±–æ–ª–∞–¥—ã.
    // `productsLoading` –∞—è“õ—Ç–∞–ª“ì–∞–Ω—à–∞ –∂”ô–Ω–µ `telegramReady` –º”ô–Ω—ñ –æ—Ä–Ω–∞—Ç—ã–ª“ì–∞–Ω—à–∞ –∫“Ø—Ç–µ–º—ñ–∑.
    // `telegramReady` –±—ñ—Ä–¥–µ–Ω –æ—Ä–Ω–∞—Ç—ã–ª—É—ã –º“Ø–º–∫—ñ–Ω, ”©–π—Ç–∫–µ–Ω—ñ `window.Telegram.WebApp.ready()` —Å–∏–Ω—Ö—Ä–æ–Ω–¥—ã –µ–º–µ—Å.
    // –ê–ª–∞–π–¥–∞, –±—ñ–∑–¥—ñ“£ –º–∞“õ—Å–∞—Ç—ã–º—ã–∑ - `productsLoading` –∞—è“õ—Ç–∞–ª“ì–∞–Ω—à–∞ –∂”ô–Ω–µ `telegramReady` –∞–Ω—ã“õ—Ç–∞–ª“ì–∞–Ω—à–∞ –∫“Ø—Ç—É.
    // `telegramReady` ”ô—Ä“õ–∞—à–∞–Ω –±—ñ—Ä –º”ô–Ω–≥–µ (`true` –Ω–µ–º–µ—Å–µ `false`) –∏–µ –±–æ–ª–∞–¥—ã, —Å–æ–Ω–¥—ã“õ—Ç–∞–Ω –æ–Ω—ã —Ç—ñ–∫–µ–ª–µ–π “õ–æ–ª–¥–∞–Ω–∞–º—ã–∑.
    if (!productsLoading) { // ”®–Ω—ñ–º–¥–µ—Ä –∂“Ø–∫—Ç–µ–ª—ñ–ø –±—ñ—Ç–∫–µ–Ω–¥–µ
         setInitialLoading(false);
    }
  }, [productsLoading]);


  // 3Ô∏è‚É£ –ñ“Ø–∫—Ç–µ—É –Ω–µ–º–µ—Å–µ Telegram –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –∂–æ“õ –±–æ–ª—Å–∞ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ—Ç—ñ–Ω —ç–∫—Ä–∞–Ω–¥–∞—Ä
  if (initialLoading) {
    return <Loading />;
  }

  if (!user && window.Telegram?.WebApp && telegramReady) {
    // Telegram WebApp —ñ—à—ñ–Ω–¥–µ, –±—ñ—Ä–∞“õ user –¥–µ—Ä–µ–≥—ñ –∂–æ“õ (–∂–æ“ì–∞—Ä—ã–¥–∞“ì—ã console.warn –∂–∞“ì–¥–∞–π—ã)
    // –ú“±–Ω—ã “õ–∞–ª–∞–π ”©“£–¥–µ—É –∫–µ—Ä–µ–∫—Ç—ñ–≥—ñ–Ω —à–µ—à—ñ“£—ñ–∑. –ú“Ø–º–∫—ñ–Ω, –±“±–ª –¥–∞ "–∫–æ–Ω—Ç–µ–∫—Å—Ç –∂–æ“õ" –∂–∞“ì–¥–∞–π—ã.
     return (
       <div className="p-4 max-w-md mx-auto text-center">
         <h2 className="text-xl font-semibold mb-4">‚ùóÔ∏è –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –¥–µ—Ä–µ–≥—ñ —Ç–∞–±—ã–ª–º–∞–¥—ã</h2>
         <p className="mb-6">
           Telegram Web App —ñ—à—ñ–Ω–¥–µ—Å—ñ–∑, –±—ñ—Ä–∞“õ –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∞“õ–ø–∞—Ä–∞—Ç—ã –∞–ª—ã–Ω–±–∞–¥—ã.
           –ë–æ—Ç—Ç—ã “õ–∞–π—Ç–∞ —ñ—Å–∫–µ “õ–æ—Å—ã–ø –∫”©—Ä—ñ“£—ñ–∑.
         </p>
         <Button
           as="a"
            // –ë–æ—Ç—Ç—ã“£ –Ω–∞“õ—Ç—ã username-—ñ–Ω –∫”©—Ä—Å–µ—Ç—ñ“£—ñ–∑
           href={`https://t.me/${process.env.REACT_APP_BOT_USERNAME || "YourBotUsername"}?start=shop`}
           className="bg-blue-600 text-white"
         >
           –ë–æ—Ç—Ç—ã –∞—à—É
         </Button>
       </div>
     );
  }


  if (!user && !window.Telegram?.WebApp) { // –ù–µ–º–µ—Å–µ !telegramReady && !user
    return (
      <div className="p-4 max-w-md mx-auto text-center">
        <h2 className="text-xl font-semibold mb-4">‚ùóÔ∏è Web App –∫–æ–Ω—Ç–µ–∫—Å—Ç—ñ –∂–æ“õ</h2>
        <p className="mb-6">
          ”®—Ç—ñ–Ω–µ–º—ñ–∑, **Telegram** —ñ—à—ñ–Ω–¥–µ–≥—ñ –±–æ—Ç—Ç–∞–Ω
          ¬´üõçÔ∏è –û–Ω–ª–∞–π–Ω –¥“Ø–∫–µ–Ω¬ª –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã–ø –∞—à—ã“£—ã–∑.
        </p>
        <Button
          as="a"
           // –ë–æ—Ç—Ç—ã“£ –Ω–∞“õ—Ç—ã username-—ñ–Ω –∫”©—Ä—Å–µ—Ç—ñ“£—ñ–∑
          href={`https://t.me/${process.env.REACT_APP_BOT_USERNAME || "YourBotUsername"}?start=shop`}
          className="bg-blue-600 text-white"
        >
          –ë–æ—Ç—Ç—ã –∞—à—É
        </Button>
      </div>
    );
  }

  // “ö–∞—Ç–µ –±–æ–ª—Å–∞ (–∂“Ø–∫—Ç–µ—É –∞—è“õ—Ç–∞–ª“ì–∞–Ω–Ω–∞–Ω –∫–µ–π—ñ–Ω)
  if (error && page === "catalog") { // –ù–µ–º–µ—Å–µ error-–¥—ã –≥–ª–æ–±–∞–ª–¥—ã —Ç“Ø—Ä–¥–µ –∂–æ“ì–∞—Ä—ã–¥–∞ –∫”©—Ä—Å–µ—Ç—É
    return (
      <div className="p-4 max-w-md mx-auto text-center">
        <div className="text-red-600 text-xl p-4 border border-red-600 rounded-md">
            <p className="font-semibold">“ö–∞—Ç–µ –ø–∞–π–¥–∞ –±–æ–ª–¥—ã:</p>
            {error}
            <Button onClick={() => window.location.reload()} className="mt-4">
                “ö–∞–π—Ç–∞ –∂“Ø–∫—Ç–µ—É
            </Button>
        </div>
      </div>
    );
  }


  // 4Ô∏è‚É£ “ö–∞–ª“ì–∞–Ω –ª–æ–≥–∏–∫–∞ ‚Äî –∫–∞—Ç–∞–ª–æ–≥, —Å–µ–±–µ—Ç, –∞–¥—Ä–µ—Å, —Ä–∞—Å—Ç–∞—É
  const addToCart = (p: any) => setCart(prev => [...prev, p]);
  const total = cart.reduce((s, p) => s + (p.price || 0), 0); // p.price –±–æ–ª—É—ã–Ω —Ç–µ–∫—Å–µ—Ä—É

  const handlePayment = async () => {
    if (!user) {
        alert("–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã –∞–Ω—ã“õ—Ç–∞–ª–º–∞–¥—ã!");
        return;
    }
    if (cart.length === 0) {
        alert("–°–µ–±–µ—Ç –±–æ—Å!");
        return;
    }
    const order = { user, address, products: cart, total };
    // –¢”©–ª–µ–º –∞–ª–¥—ã–Ω–¥–∞ loading –∫“Ø–π—ñ–Ω –æ—Ä–Ω–∞—Ç—É“ì–∞ –±–æ–ª–∞–¥—ã
    try {
      const res = await fetch("https://alphabotai.app.n8n.cloud/webhook-test/49eb5226-ed25-40e6-a3fc-272616c5a1a0", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(order)
      });
      alert(res.ok ? "‚úÖ –¢–∞–ø—Å—ã—Ä—ã—Å –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!" : `‚ùå “ö–∞—Ç–µ —Å–µ—Ä–≤–µ—Ä–¥–µ: ${res.statusText}`);
      if (res.ok) {
        setCart([]); // –°–µ–±–µ—Ç—Ç—ñ —Ç–∞–∑–∞–ª–∞—É
        setPage("catalog");
      }
    } catch (e: any) {
      alert("‚ö†Ô∏è –ë–∞–π–ª–∞–Ω—ã—Å “õ–∞—Ç–µ—Å—ñ: " + e.message);
    }
  };

  return (
    <div className="p-4 max-w-md mx-auto space-y-4 pb-20"> {/* –¢”©–º–µ–Ω–≥—ñ –∂–∞“ì—ã–Ω–¥–∞ –æ—Ä—ã–Ω “õ–∞–ª–¥—ã—Ä—É */}
      {page === "catalog" && (
        <>
          {products.length === 0 && !productsLoading && !error && (
            <div className="text-center text-gray-500 py-8">”®–Ω—ñ–º–¥–µ—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã.</div>
          )}
          <div className="grid gap-4">
            {products.map((p: any) => (
              <motion.div key={p.id} initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
                <Card className="rounded-2xl overflow-hidden shadow">
                  <CardContent className="space-y-2 p-4">
                    {p.imageURL ? (
                        <img src={p.imageURL} alt={p.name} className="w-full h-40 object-cover rounded" onError={(e) => (e.currentTarget.style.display = 'none')} />
                    ) : (
                        <div className="w-full h-40 bg-gray-200 rounded flex items-center justify-center text-gray-400">–°—É—Ä–µ—Ç –∂–æ“õ</div>
                    )}
                    <h3 className="font-bold text-lg">{p.name || "–ê—Ç–∞—É—ã –∂–æ“õ"}</h3>
                    <p className="text-gray-600 text-sm min-h-[40px]">{p.description || "–°–∏–ø–∞—Ç—Ç–∞–º–∞—Å—ã –∂–æ“õ"}</p>
                    <p className="text-green-600 font-semibold text-lg">{p.price} ‚Ç∏</p>
                    <Button onClick={() => { addToCart(p) }} className="w-full">–°–µ–±–µ—Ç–∫–µ “õ–æ—Å—É</Button>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
          {products.length > 0 && (
            <Button onClick={() => setPage("cart")} className="w-full bg-black text-white fixed bottom-4 left-1/2 transform -translate-x-1/2 max-w-[calc(100%-2rem)] md:max-w-md z-50">
              –°–µ–±–µ—Ç ({cart.length}) - {total} ‚Ç∏
            </Button>
          )}
        </>
      )}

      {page === "cart" && (
        <>
          <div className="flex justify-between items-center mb-4">
            <h2 className="font-semibold text-2xl">–°–µ–±–µ—Ç</h2>
            <Button variant="ghost" onClick={() => setPage("catalog")}>‚Üê –ö–∞—Ç–∞–ª–æ–≥“õ–∞ –æ—Ä–∞–ª—É</Button>
          </div>
          {cart.length === 0 ? (
            <p>–°–µ–±–µ—Ç—ñ“£—ñ–∑ –±–æ—Å.</p>
          ) : (
            cart.map((p, i) => (
              <div key={i} className="border p-3 rounded-md mb-2 flex justify-between items-center">
                <span>{p.name} ‚Äî {p.price} ‚Ç∏</span>
                {/* –ú“Ø–º–∫—ñ–Ω, ”©—à—ñ—Ä—É –±–∞—Ç—ã—Ä–º–∞—Å—ã –∫–µ—Ä–µ–∫ */}
              </div>
            ))
          )}
          {cart.length > 0 && (
            <>
                <p className="text-right font-bold text-xl mt-4">–ñ–∞–ª–ø—ã: {total} ‚Ç∏</p>
                <Button onClick={() => setPage("address")} className="w-full mt-4">üìç –ê–¥—Ä–µ—Å –µ–Ω–≥—ñ–∑—É</Button>
            </>
          )}
        </>
      )}

      {page === "address" && (
        <>
          <div className="flex justify-between items-center mb-4">
            <h2 className="font-semibold text-2xl">–ê–¥—Ä–µ—Å –µ–Ω–≥—ñ–∑—É</h2>
            <Button variant="ghost" onClick={() => setPage("cart")}>‚Üê –°–µ–±–µ—Ç–∫–µ –æ—Ä–∞–ª—É</Button>
          </div>
          {["city", "street", "entrance", "floor", "flat"].map(key => (
            <input
              key={key}
              className="w-full p-3 border rounded-md bg-white text-black mb-3"
              placeholder={(key === "city" ? "“ö–∞–ª–∞ (–º—ñ–Ω–¥–µ—Ç—Ç—ñ)" :
                            key === "street" ? "–ö”©—à–µ, “Ø–π (–º—ñ–Ω–¥–µ—Ç—Ç—ñ)" :
                            key === "entrance" ? "–ö—ñ—Ä–µ–±–µ—Ä—ñ—Å (–ø–æ–¥—ä–µ–∑–¥)" :
                            key === "floor" ? "“ö–∞–±–∞—Ç (—ç—Ç–∞–∂)" :
                            "–ü”ô—Ç–µ—Ä (–∫–≤–∞—Ä—Ç–∏—Ä–∞)")} // Placeholder-–ª–µ—Ä–¥—ñ –∂–∞“õ—Å–∞—Ä—Ç—É
              value={(address as any)[key]}
              onChange={e => setAddress({ ...address, [key]: e.target.value })}
            />
          ))}
          <Button
            onClick={() => {
                if (!address.city || !address.street) {
                    alert("“ö–∞–ª–∞ –∂”ô–Ω–µ –∫”©—à–µ –º–µ–Ω “Ø–π–¥—ñ –µ–Ω–≥—ñ–∑—É –º—ñ–Ω–¥–µ—Ç—Ç—ñ.");
                    return;
                }
                setPage("confirm");
            }}
            className="w-full mt-2"
          >
            –†–∞—Å—Ç–∞—É“ì–∞ ”©—Ç—É
          </Button>
        </>
      )}

      {page === "confirm" && user && ( // user –±–∞—Ä –µ–∫–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—É
        <>
          <div className="flex justify-between items-center mb-4">
            <h2 className="font-semibold text-2xl">–¢–∞–ø—Å—ã—Ä—ã—Å—Ç—ã —Ä–∞—Å—Ç–∞—É</h2>
            <Button variant="ghost" onClick={() => setPage("address")}>‚Üê –ê–¥—Ä–µ—Å—Ç—ñ ”©–∑–≥–µ—Ä—Ç—É</Button>
          </div>
          <Card className="p-4 space-y-2">
            <p><span className="font-semibold">–ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã:</span> @{user.username} (ID: {user.id})</p>
            <p><span className="font-semibold">–ñ–µ—Ç–∫—ñ–∑—É –∞–¥—Ä–µ—Å—ñ:</span> {address.city}, {address.street}, –∫—ñ—Ä–µ–±–µ—Ä—ñ—Å {address.entrance || "-"}, “õ–∞–±–∞—Ç {address.floor || "-"}, –ø”ô—Ç–µ—Ä {address.flat || "-"}</p>
            <p className="font-semibold mt-2">–¢–∞—É–∞—Ä–ª–∞—Ä:</p>
            <ul className="list-disc list-inside pl-4">
              {cart.map((p, i) => <li key={i}>{p.name} ‚Äî {p.price} ‚Ç∏</li>)}
            </ul>
            <p className="text-right font-bold text-xl mt-3">–ñ–∞–ª–ø—ã —Å–æ–º–∞: {total} ‚Ç∏</p>
          </Card>
          <Button onClick={handlePayment} className="w-full bg-purple-700 text-white mt-4">
            –¢”©–ª–µ—É –∂”ô–Ω–µ —Ç–∞–ø—Å—ã—Ä—ã—Å –±–µ—Ä—É
          </Button>
        </>
      )}
    </div>
  );
}
